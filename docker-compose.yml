version: '3.1'
services:
  mongodb:
    image: mongo
    restart: always
    container_name: mongo
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=admin
      - MONGO_INITDB_DATABASE=patient_db
    command: mongod
    volumes:
      - mongo-volume:/data/db
  mongo_temp:
    image: mongo
    restart: on-failure
    container_name: mongo_temp
    links:
      - mongodb:mongo
    command: >
      mongosh --host mongodb -u admin -p admin --eval "var db = db.getSiblingDB('patient_db');
      var user = db.getUser('hospital');
      if (user) {
        print('User already exists.');
      } else {
          db.getSiblingDB('patient_db').createUser(
            {user:'hospital', pwd:'password', roles:[{role:'readWrite',db:'patient_db'}]}
            );
      }"
    depends_on:
      - mongodb
  frontend:
    build: ./frontend
    restart: always
    ports:
      - "3000:443"
    depends_on:
      - backend
    environment:
      - NODE_ENV=production
      - REACT_APP_BACKEND_URL=https://localhost:5000
    volumes:
      - /app/frontend
      - /app/frontend/node_modules
      - /app/frontend/build
  backend:
    build: ./backend
    environment:
      - NODE_ENV=production
      - DB_NAME=patient_db
      - DB_PORT=27017
      - DB_PASSWORD=password
      - DB_USER=hospital
      - DB_HOST=mongodb
      - TOKEN_KEY=[d%dq737d28*726#dsag_Abf232A]
      - CLIENT_APP_URL=https://localhost:3000
    ports:
      - "5000:5000"
    restart: always
    depends_on:
      - mongodb
  backend_temp:
    build: ./backend
    links:
      - backend:backend_temp
    environment:
      - NODE_ENV=production
      - DB_NAME=patient_db
      - DB_PORT=27017
      - DB_PASSWORD=password
      - DB_USER=hospital
      - DB_HOST=mongodb
      - TOKEN_KEY=[d%dq737d28*726#dsag_Abf232A]
    restart: on-failure
    command: node seeders/user-admin.js
    depends_on:
      - backend
volumes:
  mongo-volume:
    driver: local
networks:
  default:
    name: hospital
